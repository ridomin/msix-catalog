# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

pool:
  name: UWPLatest

variables:
  solutioncore: 'msix.catalog.core.sln'
  buildPlatform: 'x86'
  buildConfiguration: 'Release'

strategy:
  matrix:
    Channel_FX_CD:
      Solution: msix.catalog.net.sln
      Channel_Name: FX_CD
      DistURL: https://msix-catalog.azurewebsites.net/FX
      MsixPublisherId: CN=RidoTheDev
      MsixPackageId: MSIXCatalog.CD
      MsixPackageDisplayName: MSIX Catalog (CD)
      MsixManifest: msix.catalog.package.net\package.appxmanifest
      MsixBuildMode: SideLoadOnly
      MsixGenerateAppInstaller: true
    Channel_FX_PROD:
      Solution: msix.catalog.net.sln
      Channel_Name: FX_PROD
      DistURL: https://not/used
      MsixPublisherId: CN=FD784322-3D44-4DA4-9F73-0E23D5DF0893
      MsixPackageId: 18656RidoMin.MSIXCatalog
      MsixPackageDisplayName: MSIX Catalog (CD)
      MsixManifest: msix.catalog.package.net\package.appxmanifest
      MsixBuildMode: CI
      MsixGenerateAppInstaller: false
    Channel_CORE_CD:
      Solution: msix.catalog.core.sln
      Channel_Name: CORE_CD
      DistURL: https://msix-catalog.azurewebsites.net/NC3
      MsixPublisherId: CN=RidoTheDev
      MsixPackageId: MSIXCatalog.CoreCD
      MsixPackageDisplayName: MSIX Catalog Core (CD)
      MsixManifest: msix.catalog.package.core\package.appxmanifest
      MsixBuildMode: SideLoadOnly
      MsixGenerateAppInstaller: true
    Channel_CORE_PROD:
      Solution: msix.catalog.core.sln
      Channel_Name: CORE_PROD
      DistURL: https://not/used
      MsixPublisherId: CN=FD784322-3D44-4DA4-9F73-0E23D5DF0893
      MsixPackageId: 18656RidoMin.MSIXCatalogCore
      MsixPackageDisplayName: MSIX Catalog Core
      MsixManifest: msix.catalog.package.core\package.appxmanifest
      MsixBuildMode: CI
      MsixGenerateAppInstaller: false

steps:
- script: nbgv cloud -c
  displayName: Set Version

- powershell: |
    # Update appxmanifest. This must be done before build.
    # Set the per-channel values into the appxmanifest, replacing the checked-in values
    [xml]$manifest= get-content "$(MsixManifest)"
    $manifest.Package.Identity.Version = "$(GitBuildVersionSimple).0"
    $manifest.Package.Identity.Name = "$(MsixPackageId)"
    $manifest.Package.Identity.Publisher = "$(MsixPublisherId)"
    $manifest.Package.Properties.DisplayName = "$(MsixPackageDisplayName)"
    $manifest.Package.Applications.Application.VisualElements.DisplayName = "$(MsixPackageDisplayName)"
    $manifest.save("$(MsixManifest)")

- task: MSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArguments: '/restore /p:AppxPackageSigningEnabled=false;GenerateAppInstallerFile=$(MsixGenerateAppInstaller);AppxPackageDir=$(Build.ArtifactStagingDirectory);AppInstallerUri=$(DistURL);UapAppxPackageBuildMode=$(MsixBuildMode)'
  displayName: 'Building..'
  
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)
    ArtifactName: $(Channel_Name)
    publishLocation: Container
  displayName: CopyingArtifacts
