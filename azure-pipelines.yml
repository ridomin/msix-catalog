# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

pool:
  name: UWPLatest

variables:
  solutioncore: 'msix.catalog.core.sln'
  buildPlatform: 'x86'
  buildConfiguration: 'Release'

strategy:
  matrix:
    Channel_FX_CD:
      Solution: 'msix.catalog.net.sln'
      Channel_Name: FX_CD
      DistURL: https://msixcatalog.azurewebsites.net/AppxPackages
      MsixPublisherId: CN=RidoTheDev
      MsixPackageId: MSIXCatalog.CD
      MsixPackageDisplayName: MSIX Catalog (CD)
    Channel_FX_PROD:
      Solution: 'msix.catalog.net.sln'
      Channel_Name: FX_PROD
      DistURL: https://not/used
      MsixPublisherId: CN=FD784322-3D44-4DA4-9F73-0E23D5DF0893
      MsixPackageId: 18656RidoMin.MSIXCatalog
      MsixPackageDisplayName: MSIX Catalog (CD)
    Channel_CORE_CD:
      Solution: 'msix.catalog.core.sln'
      Channel_Name: CORE_CD
      DistURL: https://msixcatalog.azurewebsites.net/netcore3
      MsixPublisherId: CN=RidoTheDev
      MsixPackageId: MSIXCatalog.CoreCD
      MsixPackageDisplayName: MSIX Catalog Core (CD)

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: custom
    custom: tool
    arguments: install -g nbgv
  displayName: Install NBGV tool

- script: nbgv cloud -c
  displayName: Set Version

- task: MSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArguments: '/restore /p:AppxPackageSigningEnabled=false;GenerateAppInstallerFile=false;AppxPackageDir=$(Build.ArtifactStagingDirectory)/AppxPackages'
  displayName: 'Building..'
  
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  displayName: 'Publishing..'